/*
 *
 * Copyright Â© ${year} ${name}
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
package org.w3c.flute.parser;

import java.io.*;
import java.net.*;

public class ParserTokenManager implements ParserConstants {
  public java.io.PrintStream debugStream = System.out;

  public void setDebugStream(java.io.PrintStream ds) {
    debugStream = ds;
  }

  private final int jjStopStringLiteralDfa_0(int pos, long active0) {
    switch (pos) {
      case 0:
        if ((active0 & 0x3e00000000000000L) != 0L) return 48;
        if ((active0 & 0x2040L) != 0L) return 79;
        if ((active0 & 0x200000L) != 0L) return 342;
        return -1;
      case 1:
        if ((active0 & 0x3e00000000000000L) != 0L) {
          jjmatchedKind = 62;
          jjmatchedPos = 1;
          return 343;
        }
        return -1;
      case 2:
        if ((active0 & 0x3e00000000000000L) != 0L) {
          jjmatchedKind = 62;
          jjmatchedPos = 2;
          return 343;
        }
        return -1;
      case 3:
        if ((active0 & 0x3e00000000000000L) != 0L) {
          jjmatchedKind = 62;
          jjmatchedPos = 3;
          return 343;
        }
        return -1;
      case 4:
        if ((active0 & 0x1000000000000000L) != 0L) return 343;
        if ((active0 & 0x2e00000000000000L) != 0L) {
          jjmatchedKind = 62;
          jjmatchedPos = 4;
          return 343;
        }
        return -1;
      case 5:
        if ((active0 & 0x2a00000000000000L) != 0L) {
          jjmatchedKind = 62;
          jjmatchedPos = 5;
          return 343;
        }
        if ((active0 & 0x400000000000000L) != 0L) return 343;
        return -1;
      case 6:
        if ((active0 & 0x200000000000000L) != 0L) return 343;
        if ((active0 & 0x2800000000000000L) != 0L) {
          jjmatchedKind = 62;
          jjmatchedPos = 6;
          return 343;
        }
        return -1;
      case 7:
        if ((active0 & 0x800000000000000L) != 0L) return 343;
        if ((active0 & 0x2000000000000000L) != 0L) {
          jjmatchedKind = 62;
          jjmatchedPos = 7;
          return 343;
        }
        return -1;
      case 8:
        if ((active0 & 0x2000000000000000L) != 0L) {
          jjmatchedKind = 62;
          jjmatchedPos = 8;
          return 343;
        }
        return -1;
      default:
        return -1;
    }
  }

  private final int jjStartNfa_0(int pos, long active0) {
    return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
  }

  private final int jjStopAtPos(int pos, int kind) {
    jjmatchedKind = kind;
    jjmatchedPos = pos;
    return pos + 1;
  }

  private final int jjStartNfaWithStates_0(int pos, int kind, int state) {
    jjmatchedKind = kind;
    jjmatchedPos = pos;
    try {
      curChar = input_stream.readChar();
    } catch (java.io.IOException e) {
      return pos + 1;
    }
    return jjMoveNfa_0(state, pos + 1);
  }

  private final int jjMoveStringLiteralDfa0_0() {
    switch (curChar) {
      case 40:
        return jjStopAtPos(0, 23);
      case 41:
        return jjStopAtPos(0, 22);
      case 42:
        return jjStopAtPos(0, 20);
      case 43:
        return jjStopAtPos(0, 12);
      case 44:
        return jjStopAtPos(0, 14);
      case 45:
        jjmatchedKind = 13;
        return jjMoveStringLiteralDfa1_0(0x40L);
      case 46:
        return jjStartNfaWithStates_0(0, 21, 342);
      case 47:
        jjmatchedKind = 17;
        return jjMoveStringLiteralDfa1_0(0x4L);
      case 58:
        return jjStopAtPos(0, 24);
      case 59:
        return jjStopAtPos(0, 15);
      case 60:
        return jjMoveStringLiteralDfa1_0(0x20L);
      case 61:
        return jjStopAtPos(0, 11);
      case 62:
        return jjStopAtPos(0, 16);
      case 64:
        return jjMoveStringLiteralDfa1_0(0x3e00000000000000L);
      case 91:
        return jjStopAtPos(0, 18);
      case 93:
        return jjStopAtPos(0, 19);
      case 123:
        return jjStopAtPos(0, 7);
      case 124:
        return jjMoveStringLiteralDfa1_0(0x200L);
      case 125:
        return jjStopAtPos(0, 8);
      case 126:
        return jjMoveStringLiteralDfa1_0(0x400L);
      default:
        return jjMoveNfa_0(1, 0);
    }
  }

  private final int jjMoveStringLiteralDfa1_0(long active0) {
    try {
      curChar = input_stream.readChar();
    } catch (java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
    }
    switch (curChar) {
      case 33:
        return jjMoveStringLiteralDfa2_0(active0, 0x20L);
      case 42:
        if ((active0 & 0x4L) != 0L) return jjStopAtPos(1, 2);
        break;
      case 45:
        return jjMoveStringLiteralDfa2_0(active0, 0x40L);
      case 61:
        if ((active0 & 0x200L) != 0L) return jjStopAtPos(1, 9);
        else if ((active0 & 0x400L) != 0L) return jjStopAtPos(1, 10);
        break;
      case 67:
      case 99:
        return jjMoveStringLiteralDfa2_0(active0, 0x800000000000000L);
      case 70:
      case 102:
        return jjMoveStringLiteralDfa2_0(active0, 0x2000000000000000L);
      case 73:
      case 105:
        return jjMoveStringLiteralDfa2_0(active0, 0x200000000000000L);
      case 77:
      case 109:
        return jjMoveStringLiteralDfa2_0(active0, 0x400000000000000L);
      case 80:
      case 112:
        return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000000L);
      default:
        break;
    }
    return jjStartNfa_0(0, active0);
  }

  private final int jjMoveStringLiteralDfa2_0(long old0, long active0) {
    if (((active0 &= old0)) == 0L) return jjStartNfa_0(0, old0);
    try {
      curChar = input_stream.readChar();
    } catch (java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
    }
    switch (curChar) {
      case 45:
        return jjMoveStringLiteralDfa3_0(active0, 0x20L);
      case 62:
        if ((active0 & 0x40L) != 0L) return jjStopAtPos(2, 6);
        break;
      case 65:
      case 97:
        return jjMoveStringLiteralDfa3_0(active0, 0x1000000000000000L);
      case 69:
      case 101:
        return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L);
      case 72:
      case 104:
        return jjMoveStringLiteralDfa3_0(active0, 0x800000000000000L);
      case 77:
      case 109:
        return jjMoveStringLiteralDfa3_0(active0, 0x200000000000000L);
      case 79:
      case 111:
        return jjMoveStringLiteralDfa3_0(active0, 0x2000000000000000L);
      default:
        break;
    }
    return jjStartNfa_0(1, active0);
  }

  private final int jjMoveStringLiteralDfa3_0(long old0, long active0) {
    if (((active0 &= old0)) == 0L) return jjStartNfa_0(1, old0);
    try {
      curChar = input_stream.readChar();
    } catch (java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
    }
    switch (curChar) {
      case 45:
        if ((active0 & 0x20L) != 0L) return jjStopAtPos(3, 5);
        break;
      case 65:
      case 97:
        return jjMoveStringLiteralDfa4_0(active0, 0x800000000000000L);
      case 68:
      case 100:
        return jjMoveStringLiteralDfa4_0(active0, 0x400000000000000L);
      case 71:
      case 103:
        return jjMoveStringLiteralDfa4_0(active0, 0x1000000000000000L);
      case 78:
      case 110:
        return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000000L);
      case 80:
      case 112:
        return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L);
      default:
        break;
    }
    return jjStartNfa_0(2, active0);
  }

  private final int jjMoveStringLiteralDfa4_0(long old0, long active0) {
    if (((active0 &= old0)) == 0L) return jjStartNfa_0(2, old0);
    try {
      curChar = input_stream.readChar();
    } catch (java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0);
      return 4;
    }
    switch (curChar) {
      case 69:
      case 101:
        if ((active0 & 0x1000000000000000L) != 0L) return jjStartNfaWithStates_0(4, 60, 343);
        break;
      case 73:
      case 105:
        return jjMoveStringLiteralDfa5_0(active0, 0x400000000000000L);
      case 79:
      case 111:
        return jjMoveStringLiteralDfa5_0(active0, 0x200000000000000L);
      case 82:
      case 114:
        return jjMoveStringLiteralDfa5_0(active0, 0x800000000000000L);
      case 84:
      case 116:
        return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000000L);
      default:
        break;
    }
    return jjStartNfa_0(3, active0);
  }

  private final int jjMoveStringLiteralDfa5_0(long old0, long active0) {
    if (((active0 &= old0)) == 0L) return jjStartNfa_0(3, old0);
    try {
      curChar = input_stream.readChar();
    } catch (java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0);
      return 5;
    }
    switch (curChar) {
      case 45:
        return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000000L);
      case 65:
      case 97:
        if ((active0 & 0x400000000000000L) != 0L) return jjStartNfaWithStates_0(5, 58, 343);
        break;
      case 82:
      case 114:
        return jjMoveStringLiteralDfa6_0(active0, 0x200000000000000L);
      case 83:
      case 115:
        return jjMoveStringLiteralDfa6_0(active0, 0x800000000000000L);
      default:
        break;
    }
    return jjStartNfa_0(4, active0);
  }

  private final int jjMoveStringLiteralDfa6_0(long old0, long active0) {
    if (((active0 &= old0)) == 0L) return jjStartNfa_0(4, old0);
    try {
      curChar = input_stream.readChar();
    } catch (java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0);
      return 6;
    }
    switch (curChar) {
      case 69:
      case 101:
        return jjMoveStringLiteralDfa7_0(active0, 0x800000000000000L);
      case 70:
      case 102:
        return jjMoveStringLiteralDfa7_0(active0, 0x2000000000000000L);
      case 84:
      case 116:
        if ((active0 & 0x200000000000000L) != 0L) return jjStartNfaWithStates_0(6, 57, 343);
        break;
      default:
        break;
    }
    return jjStartNfa_0(5, active0);
  }

  private final int jjMoveStringLiteralDfa7_0(long old0, long active0) {
    if (((active0 &= old0)) == 0L) return jjStartNfa_0(5, old0);
    try {
      curChar = input_stream.readChar();
    } catch (java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0);
      return 7;
    }
    switch (curChar) {
      case 65:
      case 97:
        return jjMoveStringLiteralDfa8_0(active0, 0x2000000000000000L);
      case 84:
      case 116:
        if ((active0 & 0x800000000000000L) != 0L) return jjStartNfaWithStates_0(7, 59, 343);
        break;
      default:
        break;
    }
    return jjStartNfa_0(6, active0);
  }

  private final int jjMoveStringLiteralDfa8_0(long old0, long active0) {
    if (((active0 &= old0)) == 0L) return jjStartNfa_0(6, old0);
    try {
      curChar = input_stream.readChar();
    } catch (java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0);
      return 8;
    }
    switch (curChar) {
      case 67:
      case 99:
        return jjMoveStringLiteralDfa9_0(active0, 0x2000000000000000L);
      default:
        break;
    }
    return jjStartNfa_0(7, active0);
  }

  private final int jjMoveStringLiteralDfa9_0(long old0, long active0) {
    if (((active0 &= old0)) == 0L) return jjStartNfa_0(7, old0);
    try {
      curChar = input_stream.readChar();
    } catch (java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0);
      return 9;
    }
    switch (curChar) {
      case 69:
      case 101:
        if ((active0 & 0x2000000000000000L) != 0L) return jjStartNfaWithStates_0(9, 61, 343);
        break;
      default:
        break;
    }
    return jjStartNfa_0(8, active0);
  }

  private final void jjCheckNAdd(int state) {
    if (jjrounds[state] != jjround) {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
    }
  }

  private final void jjAddStates(int start, int end) {
    do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
    } while (start++ != end);
  }

  private final void jjCheckNAddTwoStates(int state1, int state2) {
    jjCheckNAdd(state1);
    jjCheckNAdd(state2);
  }

  private final void jjCheckNAddStates(int start, int end) {
    do {
      jjCheckNAdd(jjnextStates[start]);
    } while (start++ != end);
  }

  private final void jjCheckNAddStates(int start) {
    jjCheckNAdd(jjnextStates[start]);
    jjCheckNAdd(jjnextStates[start + 1]);
  }

  static final long[] jjbitVec0 = {0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL};

  private final int jjMoveNfa_0(int startState, int curPos) {
    int[] nextStates;
    int startsAt = 0;
    jjnewStateCnt = 342;
    int i = 1;
    jjstateSet[0] = startState;
    int j, kind = 0x7fffffff;
    for (; ; ) {
      if (++jjround == 0x7fffffff) ReInitRounds();
      if (curChar < 64) {
        long l = 1L << curChar;
        MatchLoop:
        do {
          switch (jjstateSet[--i]) {
            case 343:
            case 50:
              if ((0x3ff200000000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddTwoStates(50, 51);
              break;
            case 1:
              if ((0x3ff000000000000L & l) != 0L) {
                if (kind > 36) kind = 36;
                jjCheckNAddStates(0, 72);
              } else if ((0x100003600L & l) != 0L) {
                if (kind > 1) kind = 1;
                jjCheckNAdd(0);
              } else if (curChar == 46) jjCheckNAddStates(73, 90);
              else if (curChar == 45) jjAddStates(91, 94);
              else if (curChar == 33) jjCheckNAddTwoStates(68, 77);
              else if (curChar == 35) jjCheckNAddTwoStates(37, 38);
              else if (curChar == 39) jjCheckNAddStates(95, 98);
              else if (curChar == 34) jjCheckNAddStates(99, 102);
              break;
            case 48:
              if (curChar == 45) jjAddStates(103, 104);
              break;
            case 342:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(105, 108);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(166, 169);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(163, 165);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(161, 162);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(158, 160);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(153, 157);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(149, 152);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(145, 148);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(142, 144);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(139, 141);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(136, 138);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(133, 135);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(130, 132);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(127, 129);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(124, 126);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(121, 123);
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(119, 120);
              if ((0x3ff000000000000L & l) != 0L) {
                if (kind > 36) kind = 36;
                jjCheckNAdd(118);
              }
              break;
            case 0:
              if ((0x100003600L & l) == 0L) break;
              if (kind > 1) kind = 1;
              jjCheckNAdd(0);
              break;
            case 2:
              if (curChar == 34) jjCheckNAddStates(99, 102);
              break;
            case 3:
              if ((0xfffffffb00000200L & l) != 0L) jjCheckNAddStates(99, 102);
              break;
            case 4:
              if (curChar == 34 && kind > 34) kind = 34;
              break;
            case 6:
              if (curChar == 12) jjCheckNAddStates(99, 102);
              break;
            case 8:
              if ((0xffffffff00000000L & l) != 0L) jjCheckNAddStates(99, 102);
              break;
            case 9:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(109, 114);
              break;
            case 10:
              if ((0x100003600L & l) != 0L) jjCheckNAddStates(99, 102);
              break;
            case 11:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(115, 123);
              break;
            case 12:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(124, 128);
              break;
            case 13:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(129, 134);
              break;
            case 14:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(135, 141);
              break;
            case 15:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(142, 149);
              break;
            case 16:
              if (curChar == 13) jjCheckNAddStates(99, 102);
              break;
            case 17:
              if (curChar == 10) jjCheckNAddStates(99, 102);
              break;
            case 18:
              if (curChar == 13) jjstateSet[jjnewStateCnt++] = 17;
              break;
            case 19:
              if (curChar == 39) jjCheckNAddStates(95, 98);
              break;
            case 20:
              if ((0xffffff7f00000200L & l) != 0L) jjCheckNAddStates(95, 98);
              break;
            case 21:
              if (curChar == 39 && kind > 34) kind = 34;
              break;
            case 23:
              if (curChar == 12) jjCheckNAddStates(95, 98);
              break;
            case 25:
              if ((0xffffffff00000000L & l) != 0L) jjCheckNAddStates(95, 98);
              break;
            case 26:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(150, 155);
              break;
            case 27:
              if ((0x100003600L & l) != 0L) jjCheckNAddStates(95, 98);
              break;
            case 28:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(156, 164);
              break;
            case 29:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(165, 169);
              break;
            case 30:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(170, 175);
              break;
            case 31:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(176, 182);
              break;
            case 32:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(183, 190);
              break;
            case 33:
              if (curChar == 13) jjCheckNAddStates(95, 98);
              break;
            case 34:
              if (curChar == 10) jjCheckNAddStates(95, 98);
              break;
            case 35:
              if (curChar == 13) jjstateSet[jjnewStateCnt++] = 34;
              break;
            case 36:
              if (curChar == 35) jjCheckNAddTwoStates(37, 38);
              break;
            case 37:
              if ((0x3ff200000000000L & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddTwoStates(37, 38);
              break;
            case 39:
              if ((0xffffffff00000000L & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddTwoStates(37, 38);
              break;
            case 40:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddStates(191, 194);
              break;
            case 41:
              if ((0x100003600L & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddTwoStates(37, 38);
              break;
            case 42:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddStates(195, 201);
              break;
            case 43:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddStates(202, 204);
              break;
            case 44:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddStates(205, 208);
              break;
            case 45:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddStates(209, 213);
              break;
            case 46:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddStates(214, 219);
              break;
            case 52:
              if ((0xffffffff00000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddTwoStates(50, 51);
              break;
            case 53:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(220, 223);
              break;
            case 54:
              if ((0x100003600L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddTwoStates(50, 51);
              break;
            case 55:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(224, 230);
              break;
            case 56:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(231, 233);
              break;
            case 57:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(234, 237);
              break;
            case 58:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(238, 242);
              break;
            case 59:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(243, 248);
              break;
            case 61:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(249, 252);
              break;
            case 62:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(253, 259);
              break;
            case 63:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(260, 262);
              break;
            case 64:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(263, 266);
              break;
            case 65:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(267, 271);
              break;
            case 66:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(272, 277);
              break;
            case 67:
              if (curChar == 33) jjCheckNAddTwoStates(68, 77);
              break;
            case 68:
              if ((0x100003600L & l) != 0L) jjCheckNAddTwoStates(68, 77);
              break;
            case 78:
              if (curChar == 45) jjAddStates(91, 94);
              break;
            case 80:
              if ((0x3ff200000000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddTwoStates(80, 81);
              break;
            case 82:
              if ((0xffffffff00000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddTwoStates(80, 81);
              break;
            case 83:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(278, 281);
              break;
            case 84:
              if ((0x100003600L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddTwoStates(80, 81);
              break;
            case 85:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(282, 288);
              break;
            case 86:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(289, 291);
              break;
            case 87:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(292, 295);
              break;
            case 88:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(296, 300);
              break;
            case 89:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(301, 306);
              break;
            case 91:
              if ((0x3ff200000000000L & l) != 0L) jjCheckNAddStates(307, 309);
              break;
            case 92:
              if (curChar == 40 && kind > 74) kind = 74;
              break;
            case 94:
              if ((0xffffffff00000000L & l) != 0L) jjCheckNAddStates(307, 309);
              break;
            case 95:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(310, 314);
              break;
            case 96:
              if ((0x100003600L & l) != 0L) jjCheckNAddStates(307, 309);
              break;
            case 97:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(315, 322);
              break;
            case 98:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(323, 326);
              break;
            case 99:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(327, 331);
              break;
            case 100:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(332, 337);
              break;
            case 101:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(338, 344);
              break;
            case 103:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(345, 349);
              break;
            case 104:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(350, 357);
              break;
            case 105:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(358, 361);
              break;
            case 106:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(362, 366);
              break;
            case 107:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(367, 372);
              break;
            case 108:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(373, 379);
              break;
            case 110:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(380, 383);
              break;
            case 111:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(384, 390);
              break;
            case 112:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(391, 393);
              break;
            case 113:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(394, 397);
              break;
            case 114:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(398, 402);
              break;
            case 115:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(403, 408);
              break;
            case 117:
              if (curChar == 46) jjCheckNAddStates(73, 90);
              break;
            case 118:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 36) kind = 36;
              jjCheckNAdd(118);
              break;
            case 119:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(119, 120);
              break;
            case 120:
              if (curChar == 37 && kind > 39) kind = 39;
              break;
            case 121:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(121, 123);
              break;
            case 124:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(124, 126);
              break;
            case 127:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(127, 129);
              break;
            case 130:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(130, 132);
              break;
            case 133:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(133, 135);
              break;
            case 136:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(136, 138);
              break;
            case 139:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(139, 141);
              break;
            case 142:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(142, 144);
              break;
            case 145:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(145, 148);
              break;
            case 149:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(149, 152);
              break;
            case 153:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(153, 157);
              break;
            case 158:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(158, 160);
              break;
            case 161:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(161, 162);
              break;
            case 163:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(163, 165);
              break;
            case 166:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(166, 169);
              break;
            case 170:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(105, 108);
              break;
            case 171:
              if (curChar == 45) jjCheckNAddTwoStates(172, 183);
              break;
            case 173:
              if ((0x3ff200000000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddTwoStates(173, 174);
              break;
            case 175:
              if ((0xffffffff00000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddTwoStates(173, 174);
              break;
            case 176:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(409, 412);
              break;
            case 177:
              if ((0x100003600L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddTwoStates(173, 174);
              break;
            case 178:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(413, 419);
              break;
            case 179:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(420, 422);
              break;
            case 180:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(423, 426);
              break;
            case 181:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(427, 431);
              break;
            case 182:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(432, 437);
              break;
            case 184:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(438, 441);
              break;
            case 185:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(442, 448);
              break;
            case 186:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(449, 451);
              break;
            case 187:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(452, 455);
              break;
            case 188:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(456, 460);
              break;
            case 189:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(461, 466);
              break;
            case 191:
              if (curChar == 40) jjCheckNAddStates(467, 472);
              break;
            case 192:
              if ((0xfffffc7a00000000L & l) != 0L) jjCheckNAddStates(473, 476);
              break;
            case 193:
              if ((0x100003600L & l) != 0L) jjCheckNAddTwoStates(193, 194);
              break;
            case 194:
              if (curChar == 41 && kind > 38) kind = 38;
              break;
            case 196:
              if ((0xffffffff00000000L & l) != 0L) jjCheckNAddStates(473, 476);
              break;
            case 197:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(477, 481);
              break;
            case 198:
              if ((0x100003600L & l) != 0L) jjCheckNAddStates(473, 476);
              break;
            case 199:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(482, 489);
              break;
            case 200:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(490, 493);
              break;
            case 201:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(494, 498);
              break;
            case 202:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(499, 504);
              break;
            case 203:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(505, 511);
              break;
            case 204:
              if (curChar == 39) jjCheckNAddStates(512, 515);
              break;
            case 205:
              if ((0xffffff7f00000200L & l) != 0L) jjCheckNAddStates(512, 515);
              break;
            case 206:
              if (curChar == 39) jjCheckNAddTwoStates(193, 194);
              break;
            case 208:
              if (curChar == 12) jjCheckNAddStates(512, 515);
              break;
            case 210:
              if ((0xffffffff00000000L & l) != 0L) jjCheckNAddStates(512, 515);
              break;
            case 211:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(516, 521);
              break;
            case 212:
              if ((0x100003600L & l) != 0L) jjCheckNAddStates(512, 515);
              break;
            case 213:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(522, 530);
              break;
            case 214:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(531, 535);
              break;
            case 215:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(536, 541);
              break;
            case 216:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(542, 548);
              break;
            case 217:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(549, 556);
              break;
            case 218:
              if (curChar == 13) jjCheckNAddStates(512, 515);
              break;
            case 219:
              if (curChar == 10) jjCheckNAddStates(512, 515);
              break;
            case 220:
              if (curChar == 13) jjstateSet[jjnewStateCnt++] = 219;
              break;
            case 221:
              if (curChar == 34) jjCheckNAddStates(557, 560);
              break;
            case 222:
              if ((0xfffffffb00000200L & l) != 0L) jjCheckNAddStates(557, 560);
              break;
            case 223:
              if (curChar == 34) jjCheckNAddTwoStates(193, 194);
              break;
            case 225:
              if (curChar == 12) jjCheckNAddStates(557, 560);
              break;
            case 227:
              if ((0xffffffff00000000L & l) != 0L) jjCheckNAddStates(557, 560);
              break;
            case 228:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(561, 566);
              break;
            case 229:
              if ((0x100003600L & l) != 0L) jjCheckNAddStates(557, 560);
              break;
            case 230:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(567, 575);
              break;
            case 231:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(576, 580);
              break;
            case 232:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(581, 586);
              break;
            case 233:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(587, 593);
              break;
            case 234:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(594, 601);
              break;
            case 235:
              if (curChar == 13) jjCheckNAddStates(557, 560);
              break;
            case 236:
              if (curChar == 10) jjCheckNAddStates(557, 560);
              break;
            case 237:
              if (curChar == 13) jjstateSet[jjnewStateCnt++] = 236;
              break;
            case 238:
              if ((0x100003600L & l) != 0L) jjCheckNAddStates(602, 608);
              break;
            case 241:
              if (curChar == 43) jjAddStates(609, 610);
              break;
            case 242:
              if (curChar != 63) break;
              if (kind > 73) kind = 73;
              jjstateSet[jjnewStateCnt++] = 243;
              break;
            case 243:
              if (curChar != 63) break;
              if (kind > 73) kind = 73;
              jjCheckNAddStates(611, 614);
              break;
            case 244:
              if (curChar == 63 && kind > 73) kind = 73;
              break;
            case 245:
            case 260:
            case 264:
            case 267:
            case 270:
              if (curChar != 63) break;
              if (kind > 73) kind = 73;
              jjCheckNAdd(244);
              break;
            case 246:
              if (curChar != 63) break;
              if (kind > 73) kind = 73;
              jjCheckNAddTwoStates(244, 245);
              break;
            case 247:
              if (curChar != 63) break;
              if (kind > 73) kind = 73;
              jjCheckNAddStates(615, 617);
              break;
            case 248:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjAddStates(618, 623);
              break;
            case 249:
              if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 250;
              break;
            case 250:
              if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 251;
              break;
            case 251:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAdd(252);
              break;
            case 252:
              if ((0x3ff000000000000L & l) != 0L && kind > 73) kind = 73;
              break;
            case 253:
              if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 254;
              break;
            case 254:
              if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 255;
              break;
            case 255:
              if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 256;
              break;
            case 256:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjCheckNAdd(244);
              break;
            case 257:
              if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 258;
              break;
            case 258:
              if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 259;
              break;
            case 259:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjstateSet[jjnewStateCnt++] = 260;
              break;
            case 261:
              if ((0x3ff000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 262;
              break;
            case 262:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjstateSet[jjnewStateCnt++] = 263;
              break;
            case 263:
              if (curChar != 63) break;
              if (kind > 73) kind = 73;
              jjCheckNAddTwoStates(244, 264);
              break;
            case 265:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjstateSet[jjnewStateCnt++] = 266;
              break;
            case 266:
              if (curChar != 63) break;
              if (kind > 73) kind = 73;
              jjCheckNAddStates(624, 626);
              break;
            case 268:
              if (curChar != 63) break;
              if (kind > 73) kind = 73;
              jjCheckNAddTwoStates(244, 267);
              break;
            case 269:
              if (curChar != 63) break;
              if (kind > 73) kind = 73;
              jjCheckNAddStates(627, 630);
              break;
            case 271:
              if (curChar != 63) break;
              if (kind > 73) kind = 73;
              jjCheckNAddTwoStates(244, 270);
              break;
            case 272:
              if (curChar != 63) break;
              if (kind > 73) kind = 73;
              jjCheckNAddStates(631, 633);
              break;
            case 273:
              if (curChar == 43) jjstateSet[jjnewStateCnt++] = 274;
              break;
            case 274:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(275, 281);
              break;
            case 275:
              if (curChar == 45) jjstateSet[jjnewStateCnt++] = 276;
              break;
            case 276:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjstateSet[jjnewStateCnt++] = 277;
              break;
            case 277:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjCheckNAddStates(634, 637);
              break;
            case 278:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjCheckNAdd(252);
              break;
            case 279:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjCheckNAddTwoStates(252, 278);
              break;
            case 280:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjCheckNAddStates(638, 640);
              break;
            case 281:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(641, 645);
              break;
            case 282:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAdd(275);
              break;
            case 283:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(282, 275);
              break;
            case 284:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(646, 648);
              break;
            case 285:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(649, 652);
              break;
            case 287:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 36) kind = 36;
              jjCheckNAddStates(0, 72);
              break;
            case 288:
              if ((0x3ff000000000000L & l) == 0L) break;
              if (kind > 36) kind = 36;
              jjCheckNAdd(288);
              break;
            case 289:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(289, 290);
              break;
            case 290:
              if (curChar == 46) jjCheckNAdd(118);
              break;
            case 291:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(291, 120);
              break;
            case 292:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(292, 293);
              break;
            case 293:
              if (curChar == 46) jjCheckNAdd(119);
              break;
            case 294:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(294, 123);
              break;
            case 295:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(295, 296);
              break;
            case 296:
              if (curChar == 46) jjCheckNAdd(121);
              break;
            case 297:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(297, 126);
              break;
            case 298:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(298, 299);
              break;
            case 299:
              if (curChar == 46) jjCheckNAdd(124);
              break;
            case 300:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(300, 129);
              break;
            case 301:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(301, 302);
              break;
            case 302:
              if (curChar == 46) jjCheckNAdd(127);
              break;
            case 303:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(303, 132);
              break;
            case 304:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(304, 305);
              break;
            case 305:
              if (curChar == 46) jjCheckNAdd(130);
              break;
            case 306:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(306, 135);
              break;
            case 307:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(307, 308);
              break;
            case 308:
              if (curChar == 46) jjCheckNAdd(133);
              break;
            case 309:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(309, 138);
              break;
            case 310:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(310, 311);
              break;
            case 311:
              if (curChar == 46) jjCheckNAdd(136);
              break;
            case 312:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(312, 141);
              break;
            case 313:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(313, 314);
              break;
            case 314:
              if (curChar == 46) jjCheckNAdd(139);
              break;
            case 315:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(315, 144);
              break;
            case 316:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(316, 317);
              break;
            case 317:
              if (curChar == 46) jjCheckNAdd(142);
              break;
            case 318:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(318, 148);
              break;
            case 319:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(319, 320);
              break;
            case 320:
              if (curChar == 46) jjCheckNAdd(145);
              break;
            case 321:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(321, 152);
              break;
            case 322:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(322, 323);
              break;
            case 323:
              if (curChar == 46) jjCheckNAdd(149);
              break;
            case 324:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(324, 157);
              break;
            case 325:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(325, 326);
              break;
            case 326:
              if (curChar == 46) jjCheckNAdd(153);
              break;
            case 327:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(327, 160);
              break;
            case 328:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(328, 329);
              break;
            case 329:
              if (curChar == 46) jjCheckNAdd(158);
              break;
            case 330:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(330, 162);
              break;
            case 331:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(331, 332);
              break;
            case 332:
              if (curChar == 46) jjCheckNAdd(161);
              break;
            case 333:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(333, 165);
              break;
            case 334:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(334, 335);
              break;
            case 335:
              if (curChar == 46) jjCheckNAdd(163);
              break;
            case 336:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(336, 169);
              break;
            case 337:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(337, 338);
              break;
            case 338:
              if (curChar == 46) jjCheckNAdd(166);
              break;
            case 339:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(653, 656);
              break;
            case 340:
              if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(340, 341);
              break;
            case 341:
              if (curChar == 46) jjCheckNAdd(170);
              break;
            default:
              break;
          }
        } while (i != startsAt);
      } else if (curChar < 128) {
        long l = 1L << (curChar & 077);
        MatchLoop:
        do {
          switch (jjstateSet[--i]) {
            case 343:
              if ((0x7fffffe87fffffeL & l) != 0L) {
                if (kind > 62) kind = 62;
                jjCheckNAddTwoStates(50, 51);
              } else if (curChar == 92) jjCheckNAddTwoStates(52, 53);
              break;
            case 79:
              if ((0x7fffffe87fffffeL & l) != 0L) jjCheckNAddStates(307, 309);
              else if (curChar == 92) jjCheckNAddTwoStates(82, 110);
              if ((0x7fffffe87fffffeL & l) != 0L) {
                if (kind > 35) kind = 35;
                jjCheckNAddTwoStates(80, 81);
              } else if (curChar == 92) jjCheckNAddTwoStates(94, 103);
              break;
            case 1:
              if ((0x7fffffe87fffffeL & l) != 0L) {
                if (kind > 35) kind = 35;
                jjCheckNAddStates(657, 661);
              } else if (curChar == 92) jjCheckNAddStates(662, 665);
              else if (curChar == 64) jjAddStates(666, 668);
              if ((0x20000000200000L & l) != 0L) jjAddStates(669, 671);
              break;
            case 48:
              if ((0x7fffffe87fffffeL & l) != 0L) {
                if (kind > 62) kind = 62;
                jjCheckNAddTwoStates(50, 51);
              } else if (curChar == 92) jjCheckNAddTwoStates(52, 61);
              break;
            case 3:
            case 8:
              if ((0x7fffffffffffffffL & l) != 0L) jjCheckNAddStates(99, 102);
              break;
            case 5:
              if (curChar == 92) jjAddStates(672, 675);
              break;
            case 7:
              if (curChar == 92) jjAddStates(676, 677);
              break;
            case 9:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(109, 114);
              break;
            case 11:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(115, 123);
              break;
            case 12:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(124, 128);
              break;
            case 13:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(129, 134);
              break;
            case 14:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(135, 141);
              break;
            case 15:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(142, 149);
              break;
            case 20:
            case 25:
              if ((0x7fffffffffffffffL & l) != 0L) jjCheckNAddStates(95, 98);
              break;
            case 22:
              if (curChar == 92) jjAddStates(678, 681);
              break;
            case 24:
              if (curChar == 92) jjAddStates(682, 683);
              break;
            case 26:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(150, 155);
              break;
            case 28:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(156, 164);
              break;
            case 29:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(165, 169);
              break;
            case 30:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(170, 175);
              break;
            case 31:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(176, 182);
              break;
            case 32:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(183, 190);
              break;
            case 37:
              if ((0x7fffffe87fffffeL & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddTwoStates(37, 38);
              break;
            case 38:
              if (curChar == 92) jjAddStates(684, 685);
              break;
            case 39:
              if ((0x7fffffffffffffffL & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddTwoStates(37, 38);
              break;
            case 40:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddStates(191, 194);
              break;
            case 42:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddStates(195, 201);
              break;
            case 43:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddStates(202, 204);
              break;
            case 44:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddStates(205, 208);
              break;
            case 45:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddStates(209, 213);
              break;
            case 46:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddStates(214, 219);
              break;
            case 47:
              if (curChar == 64) jjAddStates(666, 668);
              break;
            case 49:
              if ((0x7fffffe87fffffeL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddTwoStates(50, 51);
              break;
            case 50:
              if ((0x7fffffe87fffffeL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddTwoStates(50, 51);
              break;
            case 51:
              if (curChar == 92) jjCheckNAddTwoStates(52, 53);
              break;
            case 52:
              if ((0x7fffffffffffffffL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddTwoStates(50, 51);
              break;
            case 53:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(220, 223);
              break;
            case 55:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(224, 230);
              break;
            case 56:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(231, 233);
              break;
            case 57:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(234, 237);
              break;
            case 58:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(238, 242);
              break;
            case 59:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(243, 248);
              break;
            case 60:
              if (curChar == 92) jjCheckNAddTwoStates(52, 61);
              break;
            case 61:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(249, 252);
              break;
            case 62:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(253, 259);
              break;
            case 63:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(260, 262);
              break;
            case 64:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(263, 266);
              break;
            case 65:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(267, 271);
              break;
            case 66:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddStates(272, 277);
              break;
            case 69:
              if ((0x10000000100000L & l) != 0L && kind > 63) kind = 63;
              break;
            case 70:
              if ((0x400000004000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 69;
              break;
            case 71:
              if ((0x200000002L & l) != 0L) jjstateSet[jjnewStateCnt++] = 70;
              break;
            case 72:
              if ((0x10000000100000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 71;
              break;
            case 73:
              if ((0x4000000040000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 72;
              break;
            case 74:
              if ((0x800000008000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 73;
              break;
            case 75:
              if ((0x1000000010000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 74;
              break;
            case 76:
              if ((0x200000002000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 75;
              break;
            case 77:
              if ((0x20000000200L & l) != 0L) jjstateSet[jjnewStateCnt++] = 76;
              break;
            case 80:
              if ((0x7fffffe87fffffeL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddTwoStates(80, 81);
              break;
            case 81:
              if (curChar == 92) jjCheckNAddTwoStates(82, 83);
              break;
            case 82:
              if ((0x7fffffffffffffffL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddTwoStates(80, 81);
              break;
            case 83:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(278, 281);
              break;
            case 85:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(282, 288);
              break;
            case 86:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(289, 291);
              break;
            case 87:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(292, 295);
              break;
            case 88:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(296, 300);
              break;
            case 89:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(301, 306);
              break;
            case 90:
            case 91:
              if ((0x7fffffe87fffffeL & l) != 0L) jjCheckNAddStates(307, 309);
              break;
            case 93:
              if (curChar == 92) jjCheckNAddTwoStates(94, 95);
              break;
            case 94:
              if ((0x7fffffffffffffffL & l) != 0L) jjCheckNAddStates(307, 309);
              break;
            case 95:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(310, 314);
              break;
            case 97:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(315, 322);
              break;
            case 98:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(323, 326);
              break;
            case 99:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(327, 331);
              break;
            case 100:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(332, 337);
              break;
            case 101:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(338, 344);
              break;
            case 102:
              if (curChar == 92) jjCheckNAddTwoStates(94, 103);
              break;
            case 103:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(345, 349);
              break;
            case 104:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(350, 357);
              break;
            case 105:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(358, 361);
              break;
            case 106:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(362, 366);
              break;
            case 107:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(367, 372);
              break;
            case 108:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(373, 379);
              break;
            case 109:
              if (curChar == 92) jjCheckNAddTwoStates(82, 110);
              break;
            case 110:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(380, 383);
              break;
            case 111:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(384, 390);
              break;
            case 112:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(391, 393);
              break;
            case 113:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(394, 397);
              break;
            case 114:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(398, 402);
              break;
            case 115:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(403, 408);
              break;
            case 116:
              if ((0x7fffffe87fffffeL & l) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(657, 661);
              break;
            case 122:
              if ((0x10000000100000L & l) != 0L && kind > 40) kind = 40;
              break;
            case 123:
              if ((0x1000000010000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 122;
              break;
            case 125:
              if ((0x200000002000L & l) != 0L && kind > 41) kind = 41;
              break;
            case 126:
              if ((0x200000002000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 125;
              break;
            case 128:
              if ((0x200000002000L & l) != 0L && kind > 42) kind = 42;
              break;
            case 129:
              if ((0x800000008L & l) != 0L) jjstateSet[jjnewStateCnt++] = 128;
              break;
            case 131:
              if ((0x800000008L & l) != 0L && kind > 43) kind = 43;
              break;
            case 132:
              if ((0x1000000010000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 131;
              break;
            case 134:
              if ((0x400000004000L & l) != 0L && kind > 44) kind = 44;
              break;
            case 135:
              if ((0x20000000200L & l) != 0L) jjstateSet[jjnewStateCnt++] = 134;
              break;
            case 137:
              if ((0x100000001000000L & l) != 0L && kind > 45) kind = 45;
              break;
            case 138:
              if ((0x1000000010000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 137;
              break;
            case 140:
              if ((0x200000002000L & l) != 0L && kind > 46) kind = 46;
              break;
            case 141:
              if ((0x2000000020L & l) != 0L) jjstateSet[jjnewStateCnt++] = 140;
              break;
            case 143:
              if ((0x100000001000000L & l) != 0L && kind > 47) kind = 47;
              break;
            case 144:
              if ((0x2000000020L & l) != 0L) jjstateSet[jjnewStateCnt++] = 143;
              break;
            case 146:
              if ((0x8000000080L & l) != 0L && kind > 48) kind = 48;
              break;
            case 147:
              if ((0x2000000020L & l) != 0L) jjstateSet[jjnewStateCnt++] = 146;
              break;
            case 148:
              if ((0x1000000010L & l) != 0L) jjstateSet[jjnewStateCnt++] = 147;
              break;
            case 150:
              if ((0x1000000010L & l) != 0L && kind > 49) kind = 49;
              break;
            case 151:
              if ((0x200000002L & l) != 0L) jjstateSet[jjnewStateCnt++] = 150;
              break;
            case 152:
              if ((0x4000000040000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 151;
              break;
            case 154:
              if ((0x1000000010L & l) != 0L && kind > 50) kind = 50;
              break;
            case 155:
              if ((0x200000002L & l) != 0L) jjstateSet[jjnewStateCnt++] = 154;
              break;
            case 156:
              if ((0x4000000040000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 155;
              break;
            case 157:
              if ((0x8000000080L & l) != 0L) jjstateSet[jjnewStateCnt++] = 156;
              break;
            case 159:
              if ((0x8000000080000L & l) != 0L && kind > 51) kind = 51;
              break;
            case 160:
              if ((0x200000002000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 159;
              break;
            case 162:
              if ((0x8000000080000L & l) != 0L && kind > 52) kind = 52;
              break;
            case 164:
              if ((0x400000004000000L & l) != 0L && kind > 53) kind = 53;
              break;
            case 165:
              if ((0x10000000100L & l) != 0L) jjstateSet[jjnewStateCnt++] = 164;
              break;
            case 167:
              if ((0x400000004000000L & l) != 0L && kind > 54) kind = 54;
              break;
            case 168:
              if ((0x10000000100L & l) != 0L) jjstateSet[jjnewStateCnt++] = 167;
              break;
            case 169:
              if ((0x80000000800L & l) != 0L) jjstateSet[jjnewStateCnt++] = 168;
              break;
            case 172:
            case 173:
              if ((0x7fffffe87fffffeL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddTwoStates(173, 174);
              break;
            case 174:
              if (curChar == 92) jjCheckNAddTwoStates(175, 176);
              break;
            case 175:
              if ((0x7fffffffffffffffL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddTwoStates(173, 174);
              break;
            case 176:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(409, 412);
              break;
            case 178:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(413, 419);
              break;
            case 179:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(420, 422);
              break;
            case 180:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(423, 426);
              break;
            case 181:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(427, 431);
              break;
            case 182:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(432, 437);
              break;
            case 183:
              if (curChar == 92) jjCheckNAddTwoStates(175, 184);
              break;
            case 184:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(438, 441);
              break;
            case 185:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(442, 448);
              break;
            case 186:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(449, 451);
              break;
            case 187:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(452, 455);
              break;
            case 188:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(456, 460);
              break;
            case 189:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddStates(461, 466);
              break;
            case 190:
              if ((0x20000000200000L & l) != 0L) jjAddStates(669, 671);
              break;
            case 192:
            case 196:
              if ((0x7fffffffffffffffL & l) != 0L) jjCheckNAddStates(473, 476);
              break;
            case 195:
              if (curChar == 92) jjAddStates(686, 687);
              break;
            case 197:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(477, 481);
              break;
            case 199:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(482, 489);
              break;
            case 200:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(490, 493);
              break;
            case 201:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(494, 498);
              break;
            case 202:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(499, 504);
              break;
            case 203:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(505, 511);
              break;
            case 205:
            case 210:
              if ((0x7fffffffffffffffL & l) != 0L) jjCheckNAddStates(512, 515);
              break;
            case 207:
              if (curChar == 92) jjAddStates(688, 691);
              break;
            case 209:
              if (curChar == 92) jjAddStates(692, 693);
              break;
            case 211:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(516, 521);
              break;
            case 213:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(522, 530);
              break;
            case 214:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(531, 535);
              break;
            case 215:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(536, 541);
              break;
            case 216:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(542, 548);
              break;
            case 217:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(549, 556);
              break;
            case 222:
            case 227:
              if ((0x7fffffffffffffffL & l) != 0L) jjCheckNAddStates(557, 560);
              break;
            case 224:
              if (curChar == 92) jjAddStates(694, 697);
              break;
            case 226:
              if (curChar == 92) jjAddStates(698, 699);
              break;
            case 228:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(561, 566);
              break;
            case 230:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(567, 575);
              break;
            case 231:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(576, 580);
              break;
            case 232:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(581, 586);
              break;
            case 233:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(587, 593);
              break;
            case 234:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(594, 601);
              break;
            case 239:
              if ((0x100000001000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 191;
              break;
            case 240:
              if ((0x4000000040000L & l) != 0L) jjstateSet[jjnewStateCnt++] = 239;
              break;
            case 248:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjAddStates(618, 623);
              break;
            case 249:
              if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++] = 250;
              break;
            case 250:
              if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++] = 251;
              break;
            case 251:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAdd(252);
              break;
            case 252:
              if ((0x7e0000007eL & l) != 0L && kind > 73) kind = 73;
              break;
            case 253:
              if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++] = 254;
              break;
            case 254:
              if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++] = 255;
              break;
            case 255:
              if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++] = 256;
              break;
            case 256:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjstateSet[jjnewStateCnt++] = 244;
              break;
            case 257:
              if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++] = 258;
              break;
            case 258:
              if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++] = 259;
              break;
            case 259:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjstateSet[jjnewStateCnt++] = 260;
              break;
            case 261:
              if ((0x7e0000007eL & l) != 0L) jjstateSet[jjnewStateCnt++] = 262;
              break;
            case 262:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjstateSet[jjnewStateCnt++] = 263;
              break;
            case 265:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjstateSet[jjnewStateCnt++] = 266;
              break;
            case 274:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddTwoStates(275, 281);
              break;
            case 276:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjstateSet[jjnewStateCnt++] = 277;
              break;
            case 277:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjCheckNAddStates(634, 637);
              break;
            case 278:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjCheckNAdd(252);
              break;
            case 279:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjCheckNAddTwoStates(252, 278);
              break;
            case 280:
              if ((0x7e0000007eL & l) == 0L) break;
              if (kind > 73) kind = 73;
              jjCheckNAddStates(638, 640);
              break;
            case 281:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(641, 645);
              break;
            case 282:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAdd(275);
              break;
            case 283:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddTwoStates(282, 275);
              break;
            case 284:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(646, 648);
              break;
            case 285:
              if ((0x7e0000007eL & l) != 0L) jjCheckNAddStates(649, 652);
              break;
            case 286:
              if (curChar == 92) jjCheckNAddStates(662, 665);
              break;
            default:
              break;
          }
        } while (i != startsAt);
      } else {
        int i2 = (curChar & 0xff) >> 6;
        long l2 = 1L << (curChar & 077);
        MatchLoop:
        do {
          switch (jjstateSet[--i]) {
            case 343:
            case 50:
            case 52:
              if ((jjbitVec0[i2] & l2) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddTwoStates(50, 51);
              break;
            case 79:
              if ((jjbitVec0[i2] & l2) != 0L) {
                if (kind > 35) kind = 35;
                jjCheckNAddTwoStates(80, 81);
              }
              if ((jjbitVec0[i2] & l2) != 0L) jjCheckNAddStates(307, 309);
              break;
            case 1:
              if ((jjbitVec0[i2] & l2) != 0L) {
                if (kind > 25) kind = 25;
              }
              if ((jjbitVec0[i2] & l2) != 0L) {
                if (kind > 35) kind = 35;
                jjCheckNAddStates(657, 661);
              }
              break;
            case 48:
            case 49:
              if ((jjbitVec0[i2] & l2) == 0L) break;
              if (kind > 62) kind = 62;
              jjCheckNAddTwoStates(50, 51);
              break;
            case 3:
            case 8:
              if ((jjbitVec0[i2] & l2) != 0L) jjCheckNAddStates(99, 102);
              break;
            case 20:
            case 25:
              if ((jjbitVec0[i2] & l2) != 0L) jjCheckNAddStates(95, 98);
              break;
            case 37:
            case 39:
              if ((jjbitVec0[i2] & l2) == 0L) break;
              if (kind > 56) kind = 56;
              jjCheckNAddTwoStates(37, 38);
              break;
            case 80:
            case 82:
              if ((jjbitVec0[i2] & l2) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddTwoStates(80, 81);
              break;
            case 90:
            case 91:
            case 94:
              if ((jjbitVec0[i2] & l2) != 0L) jjCheckNAddStates(307, 309);
              break;
            case 116:
              if ((jjbitVec0[i2] & l2) == 0L) break;
              if (kind > 35) kind = 35;
              jjCheckNAddStates(657, 661);
              break;
            case 172:
            case 173:
            case 175:
              if ((jjbitVec0[i2] & l2) == 0L) break;
              if (kind > 55) kind = 55;
              jjCheckNAddTwoStates(173, 174);
              break;
            case 192:
            case 196:
              if ((jjbitVec0[i2] & l2) != 0L) jjCheckNAddStates(473, 476);
              break;
            case 205:
            case 210:
              if ((jjbitVec0[i2] & l2) != 0L) jjCheckNAddStates(512, 515);
              break;
            case 222:
            case 227:
              if ((jjbitVec0[i2] & l2) != 0L) jjCheckNAddStates(557, 560);
              break;
            default:
              break;
          }
        } while (i != startsAt);
      }
      if (kind != 0x7fffffff) {
        jjmatchedKind = kind;
        jjmatchedPos = curPos;
        kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 342 - (jjnewStateCnt = startsAt))) return curPos;
      try {
        curChar = input_stream.readChar();
      } catch (java.io.IOException e) {
        return curPos;
      }
    }
  }

  private final int jjMoveStringLiteralDfa0_1() {
    switch (curChar) {
      case 42:
        return jjMoveStringLiteralDfa1_1(0x8L);
      default:
        return 1;
    }
  }

  private final int jjMoveStringLiteralDfa1_1(long active0) {
    try {
      curChar = input_stream.readChar();
    } catch (java.io.IOException e) {
      return 1;
    }
    switch (curChar) {
      case 47:
        if ((active0 & 0x8L) != 0L) return jjStopAtPos(1, 3);
        break;
      default:
        return 2;
    }
    return 2;
  }

  static final int[] jjnextStates = {
    288, 289, 290, 291, 292, 293, 120, 294, 295, 296, 123, 297, 298, 299, 126, 300,
    301, 302, 129, 303, 304, 305, 132, 306, 307, 308, 135, 309, 310, 311, 138, 312,
    313, 314, 141, 315, 316, 317, 144, 318, 319, 320, 148, 321, 322, 323, 152, 324,
    325, 326, 157, 327, 328, 329, 160, 330, 331, 332, 162, 333, 334, 335, 165, 336,
    337, 338, 169, 339, 340, 341, 171, 172, 183, 118, 119, 121, 124, 127, 130, 133,
    136, 139, 142, 145, 149, 153, 158, 161, 163, 166, 170, 79, 90, 102, 109, 20,
    21, 22, 24, 3, 4, 5, 7, 49, 60, 170, 171, 172, 183, 3, 10, 4,
    5, 7, 11, 3, 12, 10, 4, 5, 7, 13, 14, 15, 3, 10, 4, 5,
    7, 3, 12, 10, 4, 5, 7, 3, 12, 10, 4, 5, 7, 13, 3, 12,
    10, 4, 5, 7, 13, 14, 20, 27, 21, 22, 24, 28, 20, 29, 27, 21,
    22, 24, 30, 31, 32, 20, 27, 21, 22, 24, 20, 29, 27, 21, 22, 24,
    20, 29, 27, 21, 22, 24, 30, 20, 29, 27, 21, 22, 24, 30, 31, 37,
    41, 38, 42, 37, 43, 41, 38, 44, 45, 46, 37, 41, 38, 37, 43, 41,
    38, 37, 43, 41, 38, 44, 37, 43, 41, 38, 44, 45, 50, 54, 51, 55,
    50, 56, 54, 51, 57, 58, 59, 50, 54, 51, 50, 56, 54, 51, 50, 56,
    54, 51, 57, 50, 56, 54, 51, 57, 58, 54, 50, 51, 62, 63, 54, 50,
    51, 64, 65, 66, 54, 50, 51, 63, 54, 50, 51, 63, 54, 50, 51, 64,
    63, 54, 50, 51, 64, 65, 80, 84, 81, 85, 80, 86, 84, 81, 87, 88,
    89, 80, 84, 81, 80, 86, 84, 81, 80, 86, 84, 81, 87, 80, 86, 84,
    81, 87, 88, 91, 92, 93, 91, 96, 92, 93, 97, 91, 98, 96, 92, 93,
    99, 100, 101, 91, 96, 92, 93, 91, 98, 96, 92, 93, 91, 98, 96, 92,
    93, 99, 91, 98, 96, 92, 93, 99, 100, 96, 91, 92, 93, 104, 105, 96,
    91, 92, 93, 106, 107, 108, 96, 91, 92, 93, 105, 96, 91, 92, 93, 105,
    96, 91, 92, 93, 106, 105, 96, 91, 92, 93, 106, 107, 84, 80, 81, 111,
    112, 84, 80, 81, 113, 114, 115, 84, 80, 81, 112, 84, 80, 81, 112, 84,
    80, 81, 113, 112, 84, 80, 81, 113, 114, 173, 177, 174, 178, 173, 179, 177,
    174, 180, 181, 182, 173, 177, 174, 173, 179, 177, 174, 173, 179, 177, 174, 180,
    173, 179, 177, 174, 180, 181, 177, 173, 174, 185, 186, 177, 173, 174, 187, 188,
    189, 177, 173, 174, 186, 177, 173, 174, 186, 177, 173, 174, 187, 186, 177, 173,
    174, 187, 188, 192, 204, 221, 194, 195, 238, 192, 193, 194, 195, 192, 194, 195,
    198, 199, 192, 200, 194, 195, 198, 201, 202, 203, 192, 194, 195, 198, 192, 200,
    194, 195, 198, 192, 200, 194, 195, 198, 201, 192, 200, 194, 195, 198, 201, 202,
    205, 206, 207, 209, 205, 212, 206, 207, 209, 213, 205, 214, 212, 206, 207, 209,
    215, 216, 217, 205, 212, 206, 207, 209, 205, 214, 212, 206, 207, 209, 205, 214,
    212, 206, 207, 209, 215, 205, 214, 212, 206, 207, 209, 215, 216, 222, 223, 224,
    226, 222, 229, 223, 224, 226, 230, 222, 231, 229, 223, 224, 226, 232, 233, 234,
    222, 229, 223, 224, 226, 222, 231, 229, 223, 224, 226, 222, 231, 229, 223, 224,
    226, 232, 222, 231, 229, 223, 224, 226, 232, 233, 192, 204, 221, 193, 194, 195,
    238, 242, 248, 244, 245, 246, 247, 244, 245, 246, 249, 253, 257, 261, 265, 269,
    244, 267, 268, 244, 270, 271, 272, 244, 270, 271, 252, 278, 279, 280, 252, 278,
    279, 282, 275, 283, 284, 285, 282, 275, 283, 282, 275, 283, 284, 339, 171, 172,
    183, 80, 91, 92, 93, 81, 82, 110, 94, 103, 48, 49, 60, 240, 241, 273,
    6, 16, 18, 17, 8, 9, 23, 33, 35, 34, 25, 26, 39, 40, 196, 197,
    208, 218, 220, 219, 210, 211, 225, 235, 237, 236, 227, 228,
  };
  public static final String[] jjstrLiteralImages = {
    "",
    null,
    null,
    null,
    null,
    "\74\41\55\55",
    "\55\55\76",
    "\173",
    "\175",
    "\174\75",
    "\176\75",
    "\75",
    "\53",
    "\55",
    "\54",
    "\73",
    "\76",
    "\57",
    "\133",
    "\135",
    "\52",
    "\56",
    "\51",
    "\50",
    "\72",
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
  };
  public static final String[] lexStateNames = {
    "DEFAULT", "IN_COMMENT",
  };
  public static final int[] jjnewLexState = {
    -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
        -1,
    -1,
  };
  static final long[] jjtoToken = {
    0xffffffdc03ffffe3L, 0xe00L,
  };
  static final long[] jjtoSkip = {
    0x8L, 0x0L,
  };
  static final long[] jjtoMore = {
    0x14L, 0x0L,
  };
  protected CharStream input_stream;
  private final int[] jjrounds = new int[342];
  private final int[] jjstateSet = new int[684];
  StringBuffer image;
  int jjimageLen;
  int lengthOfMatch;
  protected char curChar;

  public ParserTokenManager(CharStream stream) {
    input_stream = stream;
  }

  public ParserTokenManager(CharStream stream, int lexState) {
    this(stream);
    SwitchTo(lexState);
  }

  public void ReInit(CharStream stream) {
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private final void ReInitRounds() {
    int i;
    jjround = 0x80000001;
    for (i = 342; i-- > 0; ) jjrounds[i] = 0x80000000;
  }

  public void ReInit(CharStream stream, int lexState) {
    ReInit(stream);
    SwitchTo(lexState);
  }

  public void SwitchTo(int lexState) {
    if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError(
          "Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.",
          TokenMgrError.INVALID_LEXICAL_STATE);
    else curLexState = lexState;
  }

  protected Token jjFillToken() {
    Token t = Token.newToken(jjmatchedKind);
    t.kind = jjmatchedKind;
    String im = jjstrLiteralImages[jjmatchedKind];
    t.image = (im == null) ? input_stream.GetImage() : im;
    t.beginLine = input_stream.getBeginLine();
    t.beginColumn = input_stream.getBeginColumn();
    t.endLine = input_stream.getEndLine();
    t.endColumn = input_stream.getEndColumn();
    return t;
  }

  int curLexState = 0;
  int defaultLexState = 0;
  int jjnewStateCnt;
  int jjround;
  int jjmatchedPos;
  int jjmatchedKind;

  public Token getNextToken() {
    int kind;
    Token specialToken = null;
    Token matchedToken;
    int curPos = 0;

    EOFLoop:
    for (; ; ) {
      try {
        curChar = input_stream.BeginToken();
      } catch (java.io.IOException e) {
        jjmatchedKind = 0;
        matchedToken = jjFillToken();
        return matchedToken;
      }
      image = null;
      jjimageLen = 0;

      for (; ; ) {
        switch (curLexState) {
          case 0:
            jjmatchedKind = 0x7fffffff;
            jjmatchedPos = 0;
            curPos = jjMoveStringLiteralDfa0_0();
            if (jjmatchedPos == 0 && jjmatchedKind > 75) {
              jjmatchedKind = 75;
            }
            break;
          case 1:
            jjmatchedKind = 0x7fffffff;
            jjmatchedPos = 0;
            curPos = jjMoveStringLiteralDfa0_1();
            if (jjmatchedPos == 0 && jjmatchedKind > 4) {
              jjmatchedKind = 4;
            }
            break;
        }
        if (jjmatchedKind != 0x7fffffff) {
          if (jjmatchedPos + 1 < curPos) input_stream.backup(curPos - jjmatchedPos - 1);
          if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L) {
            matchedToken = jjFillToken();
            TokenLexicalActions(matchedToken);
            if (jjnewLexState[jjmatchedKind] != -1) curLexState = jjnewLexState[jjmatchedKind];
            return matchedToken;
          } else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L) {
            if (jjnewLexState[jjmatchedKind] != -1) curLexState = jjnewLexState[jjmatchedKind];
            continue EOFLoop;
          }
          jjimageLen += jjmatchedPos + 1;
          if (jjnewLexState[jjmatchedKind] != -1) curLexState = jjnewLexState[jjmatchedKind];
          curPos = 0;
          jjmatchedKind = 0x7fffffff;
          try {
            curChar = input_stream.readChar();
            continue;
          } catch (java.io.IOException e1) {
          }
        }
        int error_line = input_stream.getEndLine();
        int error_column = input_stream.getEndColumn();
        String error_after = null;
        boolean EOFSeen = false;
        try {
          input_stream.readChar();
          input_stream.backup(1);
        } catch (java.io.IOException e1) {
          EOFSeen = true;
          error_after = curPos <= 1 ? "" : input_stream.GetImage();
          if (curChar == '\n' || curChar == '\r') {
            error_line++;
            error_column = 0;
          } else error_column++;
        }
        if (!EOFSeen) {
          input_stream.backup(1);
          error_after = curPos <= 1 ? "" : input_stream.GetImage();
        }
        throw new TokenMgrError(
            EOFSeen,
            curLexState,
            error_line,
            error_column,
            error_after,
            curChar,
            TokenMgrError.LEXICAL_ERROR);
      }
    }
  }

  void TokenLexicalActions(Token matchedToken) {
    switch (jjmatchedKind) {
      case 1:
        if (image == null) image = new StringBuffer();
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
        image = Parser.SPACE;
        break;
      default:
        break;
    }
  }
}
